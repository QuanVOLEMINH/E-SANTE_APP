{"version":3,"sources":["core/src/model/form-group/dynamic-form-group.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EACH,uBAAuB,EAI1B,MAAM,+BAA+B,CAAC;AACvC,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AAEtE,MAAM,CAAC,IAAM,+BAA+B,GAAG,OAAO,CAAC;AAUvD;IAA2C,yCAAuB;IAS9D,+BAAY,MAAmC,EAAE,GAAe;QAAhE,YAEI,kBAAM,MAAM,EAAE,GAAG,CAAC,SAMrB;QAde,WAAK,GAA8B,EAAE,CAAC;QAI7B,UAAI,GAAW,+BAA+B,CAAC;QAMpE,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC;QACpD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;QAC7D,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC;QACpC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,IAAI,CAAC;;IAC9C,CAAC;IAED,mCAAG,GAAH,UAAI,KAAa;QACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED,mCAAG,GAAH,UAAI,KAAa,EAAE,YAAqC;QACpD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,YAAY,CAAC;IACrC,CAAC;IAED,mCAAG,GAAH,UAAI,YAAqC;QACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAClC,CAAC;IAED,sCAAM,GAAN,UAAO,KAAa,EAAE,YAAqC;QACvD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;IAC9C,CAAC;IAED,oCAAI,GAAJ,UAAK,KAAa,EAAE,IAAY;QAC5B,CAAA,KAAA,IAAI,CAAC,KAAK,CAAA,CAAC,MAAM,YAAC,KAAK,GAAG,IAAI,EAAE,CAAC,SAAK,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,GAAE;;IACvE,CAAC;IAED,sCAAM,GAAN,UAAO,KAAa;QAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,oCAAI,GAAJ;QACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;IA3Ce;QAAf,YAAY,EAAE;;iEAA6C;IAC5C;QAAf,YAAY,EAAE;;wDAAuC;IACtC;QAAf,YAAY,EAAE;;yDAAuB;IACtB;QAAf,YAAY,EAAE;;4DAAwC;IAEvC;QAAf,YAAY,EAAE;;uDAAyD;IAuC5E,4BAAC;CA9CD,AA8CC,CA9C0C,uBAAuB,GA8CjE;SA9CY,qBAAqB","file":"dynamic-form-group.model.js","sourcesContent":["import {\n    DynamicFormControlModel,\n    DynamicFormControlModelConfig,\n    DynamicValidatorsMap,\n    ClsConfig\n} from \"../dynamic-form-control.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_GROUP = \"GROUP\";\n\nexport interface DynamicFormGroupModelConfig extends DynamicFormControlModelConfig {\n\n    asyncValidator?: DynamicValidatorsMap;\n    group?: DynamicFormControlModel[];\n    legend?: string;\n    validator?: DynamicValidatorsMap;\n}\n\nexport class DynamicFormGroupModel extends DynamicFormControlModel {\n\n    @serializable() asyncValidator: DynamicValidatorsMap | null;\n    @serializable() group: DynamicFormControlModel[] = [];\n    @serializable() legend: string | null;\n    @serializable() validator: DynamicValidatorsMap | null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, cls?: ClsConfig) {\n\n        super(config, cls);\n\n        this.asyncValidator = config.asyncValidator || null;\n        this.group = Array.isArray(config.group) ? config.group : [];\n        this.legend = config.legend || null;\n        this.validator = config.validator || null;\n    }\n\n    get(index: number): DynamicFormControlModel {\n        return this.group[index];\n    }\n\n    set(index: number, controlModel: DynamicFormControlModel,): void {\n        this.group[index] = controlModel;\n    }\n\n    add(controlModel: DynamicFormControlModel): void {\n        this.group.push(controlModel);\n    }\n\n    insert(index: number, controlModel: DynamicFormControlModel): void {\n        this.group.splice(index, 0, controlModel);\n    }\n\n    move(index: number, step: number): void {\n        this.group.splice(index + step, 0, ...this.group.splice(index, 1));\n    }\n\n    remove(index: number) {\n        this.group.splice(index, 1);\n    }\n\n    size(): number {\n        return this.group.length;\n    }\n}"]}