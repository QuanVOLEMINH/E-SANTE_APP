{"version":3,"sources":["core/src/model/checkbox/dynamic-checkbox-group.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAO,EAAE,qBAAqB,EAA+B,MAAM,wCAAwC,CAAC;AAE5G,OAAO,EAAE,YAAY,EAAE,MAAM,wCAAwC,CAAC;AAEtE,MAAM,CAAC,IAAM,wCAAwC,GAAG,gBAAgB,CAAC;AAEzE;IAA+C,6CAAqB;IAMhE,mCAAY,MAAmC,EAAE,GAAe;QAAhE,YACI,kBAAM,MAAM,EAAE,GAAG,CAAC,SACrB;QAJwB,UAAI,GAAW,wCAAwC,CAAC;;IAIjF,CAAC;IAED,yCAAK,GAAL;QAAA,iBAEC;QAFK,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACtB,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,IAAI,EAAhC,CAAgC,CAAC,CAAC;IAC/D,CAAC;IAED,2CAAO,GAAP;QAAA,iBAEC;QAFO,iBAAoB;aAApB,UAAoB,EAApB,qBAAoB,EAApB,IAAoB;YAApB,4BAAoB;;QACxB,OAAO,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,GAAG,KAAK,EAAjC,CAAiC,CAAC,CAAC;IAChE,CAAC;IAED,4CAAQ,GAAR;QACI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,GAAG,IAAI,EAApB,CAAoB,CAAC,CAAC;IACtD,CAAC;IAED,8CAAU,GAAV;QACI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,GAAG,KAAK,EAArB,CAAqB,CAAC,CAAC;IACvD,CAAC;IAtBe;QAAf,YAAY,EAAE;;4DAA+B;IAE9B;QAAf,YAAY,EAAE;;2DAAkE;IAqBrF,gCAAC;CAzBD,AAyBC,CAzB8C,qBAAqB,GAyBnE;SAzBY,yBAAyB","file":"dynamic-checkbox-group.model.js","sourcesContent":["import { ClsConfig } from \"../dynamic-form-control.model\";\nimport { DynamicFormGroupModel, DynamicFormGroupModelConfig } from \"../form-group/dynamic-form-group.model\";\nimport { DynamicCheckboxModel } from \"./dynamic-checkbox.model\";\nimport { serializable } from \"../../decorator/serializable.decorator\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP = \"CHECKBOX_GROUP\";\n\nexport class DynamicCheckboxGroupModel extends DynamicFormGroupModel {\n\n    @serializable() group: DynamicCheckboxModel[];\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP;\n\n    constructor(config: DynamicFormGroupModelConfig, cls?: ClsConfig) {\n        super(config, cls);\n    }\n\n    check(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = true);\n    }\n\n    uncheck(...indices: number[]): void {\n        indices.forEach(index => this.group[index].checked = false);\n    }\n\n    checkAll(): void {\n        this.group.forEach(model => model.checked = true);\n    }\n\n    uncheckAll(): void {\n        this.group.forEach(model => model.checked = false);\n    }\n}"]}